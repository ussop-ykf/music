<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.music.mapper.SingerMapper">

    <resultMap id="BaseResultMap" type="org.example.music.domain.Singer">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="TINYINT"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="TIMESTAMP"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,name,sex,
        pic,birth,location,
        introduction
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from singer
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectSingerList" resultType="org.example.music.domain.Singer">
        select
        <include refid="Base_Column_List"/>
        from singer
        <where>
            <if test="record.name != null and record.name != ''">
                and name like concat('%',#{record.name,jdbcType=VARCHAR},'%')
            </if>
            <if test="record.sex != null">
                and sex = #{record.sex,jdbcType=TINYINT}
            </if>
            <if test="record.birth != null">
                and birth = #{record.birth}
            </if>
            <if test="record.location != null">
                and location = #{singer.location}
            </if>
        </where>
        order by id desc
        limit #{start},#{pageSize}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from singer
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.music.domain.Singer"
            useGeneratedKeys="true">
        insert into singer
        ( id, name, sex
        , pic, birth, location
        , introduction)
        values ( #{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}
               , #{pic,jdbcType=VARCHAR}, #{birth,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}
               , #{introduction,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.music.domain.Singer"
            useGeneratedKeys="true">
        insert into singer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="sex != null">sex,</if>
            <if test="pic != null">pic,</if>
            <if test="birth != null">birth,</if>
            <if test="location != null">location,</if>
            <if test="introduction != null">introduction,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="name != null">#{name,jdbcType=VARCHAR},</if>
            <if test="sex != null">#{sex,jdbcType=TINYINT},</if>
            <if test="pic != null">#{pic,jdbcType=VARCHAR},</if>
            <if test="birth != null">#{birth,jdbcType=TIMESTAMP},</if>
            <if test="location != null">#{location,jdbcType=VARCHAR},</if>
            <if test="introduction != null">#{introduction,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.music.domain.Singer">
        update singer
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="pic != null">
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.music.domain.Singer">
        update singer
        set name         = #{name,jdbcType=VARCHAR},
            sex          = #{sex,jdbcType=TINYINT},
            pic          = #{pic,jdbcType=VARCHAR},
            birth        = #{birth,jdbcType=TIMESTAMP},
            location     = #{location,jdbcType=VARCHAR},
            introduction = #{introduction,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
