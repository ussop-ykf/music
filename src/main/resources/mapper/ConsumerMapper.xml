<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.music.mapper.ConsumerMapper">

    <resultMap id="BaseResultMap" type="org.example.music.domain.Consumer">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="TINYINT"/>
        <result property="phoneNum" column="phone_num" jdbcType="CHAR"/>
        <result property="email" column="email" jdbcType="CHAR"/>
        <result property="birth" column="birth" jdbcType="TIMESTAMP"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="avator" column="avator" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,username,password,
        sex,phone_num,email,
        birth,introduction,location,
        avator,create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from consumer
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from consumer
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.music.domain.Consumer"
            useGeneratedKeys="true">
        insert into consumer
        ( id, username, password
        , sex, phone_num, email
        , birth, introduction, location
        , avator, create_time, update_time)
        values ( #{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
               , #{sex,jdbcType=TINYINT}, #{phoneNum,jdbcType=CHAR}, #{email,jdbcType=CHAR}
               , #{birth,jdbcType=TIMESTAMP}, #{introduction,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}
               , #{avator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.music.domain.Consumer"
            useGeneratedKeys="true">
        insert into consumer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="sex != null">sex,</if>
            <if test="phoneNum != null">phone_num,</if>
            <if test="email != null">email,</if>
            <if test="birth != null">birth,</if>
            <if test="introduction != null">introduction,</if>
            <if test="location != null">location,</if>
            <if test="avator != null">avator,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="username != null">#{username,jdbcType=VARCHAR},</if>
            <if test="password != null">#{password,jdbcType=VARCHAR},</if>
            <if test="sex != null">#{sex,jdbcType=TINYINT},</if>
            <if test="phoneNum != null">#{phoneNum,jdbcType=CHAR},</if>
            <if test="email != null">#{email,jdbcType=CHAR},</if>
            <if test="birth != null">#{birth,jdbcType=TIMESTAMP},</if>
            <if test="introduction != null">#{introduction,jdbcType=VARCHAR},</if>
            <if test="location != null">#{location,jdbcType=VARCHAR},</if>
            <if test="avator != null">#{avator,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.music.domain.Consumer">
        update consumer
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=CHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="avator != null">
                avator = #{avator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.music.domain.Consumer">
        update consumer
        set username     = #{username,jdbcType=VARCHAR},
            password     = #{password,jdbcType=VARCHAR},
            sex          = #{sex,jdbcType=TINYINT},
            phone_num    = #{phoneNum,jdbcType=CHAR},
            email        = #{email,jdbcType=CHAR},
            birth        = #{birth,jdbcType=TIMESTAMP},
            introduction = #{introduction,jdbcType=VARCHAR},
            location     = #{location,jdbcType=VARCHAR},
            avator       = #{avator,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
